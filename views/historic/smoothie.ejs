<!DOCTYPE html>
<html>
  <head>
    <style type="text/css">
      body {
        background-color: #111111;
        color: #eeeeee;
        font-family: tahoma, arial, sans-serif;
        padding-left: 100px;
      }
      h4 {
        margin-bottom: 1px;
      }
    </style>
    <script type="text/javascript" src="/javascripts/smoothie.js"></script>
  </head>
  <body onload="init()">

    <h1>CPU Load</h1>

    <h4>host1.example.com</h4>
    <canvas id="host1Cpu" width="1000" height="200"></canvas>

    <h4>host2.example.com</h4>
    <canvas id="host2Cpu" width="1000" height="200"></canvas>

    <h4>host3.example.com</h4>
    <canvas id="host3Cpu" width="1000" height="200"></canvas>

    <h4>host4.example.com</h4>
    <canvas id="host4Cpu" width="1000" height="200"></canvas>

    <p><em>This is fake data.</em></p>


  </body>
  <script type="text/javascript">

  function init() {
  initHost('host1');
  initHost('host2');
  initHost('host3');
  initHost('host4');
}

var seriesOptions = [
  { strokeStyle: 'rgba(255, 0, 0, 1)', fillStyle: 'rgba(255, 0, 0, 0.1)', lineWidth: 3 },
  { strokeStyle: 'rgba(0, 255, 0, 1)', fillStyle: 'rgba(0, 255, 0, 0.1)', lineWidth: 3 },
  { strokeStyle: 'rgba(0, 0, 255, 1)', fillStyle: 'rgba(0, 0, 255, 0.1)', lineWidth: 3 },
  { strokeStyle: 'rgba(255, 255, 0, 1)', fillStyle: 'rgba(255, 255, 0, 0.1)', lineWidth: 3 }
];

function initHost(hostId) {

  // Initialize an empty TimeSeries for each CPU.
  var cpuDataSets = [new TimeSeries(), new TimeSeries(), new TimeSeries(), new TimeSeries()];

  var now = new Date().getTime();
  for (var t = now - 1000 * 50; t <= now; t += 1000) {
    addRandomValueToDataSets(t, cpuDataSets);
  }
  // Every second, simulate a new set of readings being taken from each CPU.
  setInterval(function() {
    addRandomValueToDataSets(new Date().getTime(), cpuDataSets);
  }, 500);

//   var counter = 0;
//
// var looper = setInterval(function(){
//     counter++;
//     console.log("Counter is: " + counter);
//     addRandomValueToDataSets(new Date().getTime(), cpuDataSets);
//
//     if (counter >= 10)
//     {
//         clearInterval(looper);
//     }
//
// }, 500);

  // Build the timeline
  // var chart = new SmoothieChart({yRangeFunction:myYRangeFunction,horizontalLines:[{color:'#ffffff',lineWidth:1,value:0},{color:'#880000',lineWidth:2,value:3333},{color:'#880000',lineWidth:2,value:-3333}]}),

  var timeline = new SmoothieChart({ millisPerPixel: 20, grid: { strokeStyle: '#555555', lineWidth: 1, 'stroke-dasharray': 5.5, millisPerLine: 1000, verticalSections: 4 }});
  for (var i = 0; i < cpuDataSets.length; i++) {
    timeline.addTimeSeries(cpuDataSets[i], seriesOptions[i]);
  }
  timeline.streamTo(document.getElementById(hostId + 'Cpu'), 1000);
  canvas = document.getElementById(hostId + 'Cpu');
  var ctx = canvas.getContext('2d');

}

function addRandomValueToDataSets(time, dataSets) {
  for (var i = 0; i < dataSets.length; i++) {
    dataSets[i].append(time, Math.random());
  }
}


  </script>
</html>
